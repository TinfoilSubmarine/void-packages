# Template file for 'vaultwarden'
pkgname=vaultwarden
version=1.28.0
revision=1
archs="x86_64* aarch64* arm*" # ring
configure_args="--features sqlite,mysql,postgresql"
hostmakedepends="pkg-config rustup"
makedepends="openssl-devel libmysqlclient-devel postgresql-libs-devel
 sqlite-devel"
short_desc="Unofficial Bitwarden compatible server written in Rust"
maintainer="Joel Beckmeyer <joel@beckmeyer.us>"
license="AGPL-3.0-only"
homepage="https://github.com/dani-garcia/vaultwarden"
changelog="https://github.com/dani-garcia/vaultwarden/releases"
distfiles="https://github.com/dani-garcia/vaultwarden/archive/${version}.tar.gz"
checksum=2cd1a4e62b30a7034b3c1b50ca529b9355cd21e5e74bc8f48ef40e4928de6653

system_accounts="_vaultwarden"
_vaultwarden_homedir="/var/lib/vaultwarden"

make_dirs="/var/lib/vaultwarden 0750 _vaultwarden _vaultwarden"

do_build() {
	rustup-init -y
	source "/tmp/.cargo/env"
	cargo install cargo-auditable cargo-audit
	: ${make_cmd:=cargo auditable}

	${make_cmd} build --release --target ${RUST_TARGET} ${configure_args}
}

do_check() {
	source "/tmp/.cargo/env"
	: ${make_cmd:=cargo auditable}

	${make_check_pre} ${make_cmd} test --release --target ${RUST_TARGET} ${configure_args} \
		${make_check_args}
}

do_install() {
	source "/tmp/.cargo/env"
	: ${make_cmd:=cargo auditable}
	: ${make_install_args:=--path .}

	${make_cmd} install --target ${RUST_TARGET} --root="${DESTDIR}/usr" \
		--offline --locked ${configure_args} ${make_install_args}

	rm -f "${DESTDIR}"/usr/.crates.toml
	rm -f "${DESTDIR}"/usr/.crates2.json
}

post_install() {
	vsconf .env.template vaultwarden.conf
	vsv vaultwarden
	vlicense LICENSE.txt
}
